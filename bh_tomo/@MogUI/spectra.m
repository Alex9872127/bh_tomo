function spectra(obj,varargin)

if exist('pwelch','file')~=2
    warndlg('You need the Signal Processing toolbox to get MOG Spectra')
    return
end
fs = 11;
if isa(varargin{1},'matlab.ui.control.UIControl')
    fs = varargin{1}.FontSize;
elseif ispc
    fs = 9;
end

no = obj.handles.listMogs.Value;
if no<=0 || no>length(obj.mogs)
    warndlg('No MOG selected')
    return
end

mog = obj.mogs(no);

width = 900;
height = 600;

% get screen size
su = get(groot,'Units');
set(groot,'Units','points')
scnsize = get(groot,'ScreenSize');
pos = [scnsize(3)/2-width/2 scnsize(4)/2-height/2 width height];
set(groot,'Units',su)       % Restore default root screen units


f = figure('Visible','off',...
    'Units','points',...
    'Position',pos,...
    'Tag','fig_bh_tomo2_spectra',...
    'Name','MOG Spectra',...
    'NumberTitle','off',...
    'ToolBar','none',...,
    'MenuBar','None',...
    'SizeChangedFcn',@resizeUI,...
    'CloseRequestFcn',@closeWindow);

haxes1 = axes('Units','points','Parent',f);
haxes2 = axes('Units','points','Parent',f);
haxes3 = axes('Units','points','Parent',f);



% find number of Tx positions
uTx = unique([mog.data.Tx_x' mog.data.Tx_y' mog.data.Tx_z'],'rows');
text = cell(size(uTx,1),1);
for n=1:length(text)
    text{n} = num2str(n);
end
htxNumber = uicontrol('Style','text',...
    'String','Tx Number',...
    'HorizontalAlignment','center',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',f);
htxNumberPopup = uicontrol('Style','popupmenu',...
    'String',text,...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@txNumber,...
    'Parent',f);
htxElev = uicontrol('Style','text',...
    'String','Tx Elevation :',...
    'HorizontalAlignment','center',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',f);

hpsd = uicontrol('Style','text',...
    'String','PSD Estimation Method',...
    'HorizontalAlignment','center',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',f);
hpsdPopup = uicontrol('Style','popupmenu',...
    'String',{'Welch','Burg - order 2','Burg - order 3','Burg - order 4'},...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@psd,...
    'Parent',f);

hlowpass = uicontrol('Style','checkbox',...
    'String','Apply Low Pass Filter',...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@lowpass,...
    'Parent',f);

hfscale = uicontrol('Style','text',...
    'String','Frequency Scale',...
    'HorizontalAlignment','center',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',f);
hfscalePopup = uicontrol('Style','popupmenu',...
    'String',{'Linear','Log'},...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@fscale,...
    'Parent',f);

hsnrscale = uicontrol('Style','text',...
    'String','SNR Scale',...
    'HorizontalAlignment','center',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',f);
hsnrscalePopup = uicontrol('Style','popupmenu',...
    'String',{'Linear','Log'},...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@snrscale,...
    'Parent',f);

hdfreq = uipanel(f,'Title','Dominant Frequency',...
    'Units','points',...
    'FontSize',fs);

hdfreqCheck = uicontrol('Style','checkbox',...
    'String','Compute & Show',...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@domFreq,...
    'Parent',hdfreq);
hdfmin = uicontrol('Style','text',...
    'String','F min',...
    'HorizontalAlignment','right',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',hdfreq);
hdfminEdit = uicontrol('Style','edit',...
    'String','0',...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@domFreq,...
    'Parent',hdfreq);
hdfmax = uicontrol('Style','text',...
    'String','F max',...
    'HorizontalAlignment','right',...
    'Units','points',...
    'FontSize',fs,...
    'Parent',hdfreq);
hdfmaxEdit = uicontrol('Style','edit',...
    'String','400',...
    'Units','points',...
    'FontSize',fs,...
    'Callback',@domFreq,...
    'Parent',hdfreq);

uiwait(f)

    function resizeUI(varargin)
        f.Visible = 'off';
        
        hBorder = 15;
        width = f.Position(3);
        height = f.Position(4);
        
        axBorder = haxes1.Position(2);
        
        axWidth = 9/40*width;
        haxes1.Position = [axBorder axBorder axWidth height-2.5*axBorder];
        haxes2.Position = [1.5*axBorder+axWidth axBorder axWidth height-2.5*axBorder];
        haxes3.Position = [2*axBorder+2*axWidth axBorder 1/6*width height-2.5*axBorder];
        
        hSize = width/22;
        
        vFac = 0.8*height/600;
        if vFac<1
            vFac = 1;
        end
        vSize = 22*vFac;
        vSpace = 5*vFac;
        
        htxNumber.Position = [width-hBorder-3*hSize height-axBorder 2*hSize vSize];
        htxNumberPopup.Position = [width-hBorder-3*hSize height-axBorder-vSize 2*hSize vSize];
        htxElev.Position = [width-hBorder-3.5*hSize height-axBorder-2*vSize-vSpace 3*hSize vSize];
        
        hpsd.Position = [width-hBorder-3.5*hSize height-axBorder-3*vSize-4*vSpace 3*hSize vSize];
        hpsdPopup.Position = [width-hBorder-3*hSize height-axBorder-4*vSize-5*vSpace 2*hSize vSize];
        
        hlowpass.Position = [width-hBorder-4*hSize height-axBorder-5*vSize-8*vSpace 4*hSize vSize];

        hfscale.Position = [width-hBorder-3.5*hSize height-axBorder-6*vSize-11*vSpace 3*hSize vSize];
        hfscalePopup.Position = [width-hBorder-3*hSize height-axBorder-7*vSize-12*vSpace 2*hSize vSize];
        hsnrscale.Position = [width-hBorder-3.5*hSize height-axBorder-8*vSize-15*vSpace 3*hSize vSize];
        hsnrscalePopup.Position = [width-hBorder-3*hSize height-axBorder-9*vSize-16*vSpace 2*hSize vSize];

        hSize = 4*hSize;
        hdfreq.Position = [width-hBorder-hSize axBorder hSize 6*vSize];
        
        hSize = hSize/4;
        hdfmax.Position = [hBorder hBorder hSize vSize];
        hdfmin.Position = [hBorder hBorder+vSize+vSpace hSize vSize];
        hSize = 1.2*hSize;
        hdfmaxEdit.Position = [hBorder+hSize hBorder hSize vSize];
        hdfminEdit.Position = [hBorder+hSize hBorder+vSize+vSpace hSize vSize];
        
        hdfreqCheck.Position = [hBorder hBorder+2*vSize+3*vSpace 3*hSize vSize];
        f.Visible = 'on';
    end
    function closeWindow(varargin)
        delete(f)
    end

    function txNumber(varargin)
    end
    function psd(varargin)
    end
    function lowpass(varargin)
        
    end
    function fscale(varargin)
    end
    function snrscale(varargin)
        
    end
    function domFreq(varargin)
        
    end
end
