function bh_tomo2_inv( varargin )
%BH_TOMO2_INV Pertorm tomographic inversion

rep='';
file='';
if nargin>=2
    rep=varargin{1};
    file=varargin{2};
end

% Main variables

cm = CovarianceModel.empty;
cmUI = CovarianceUI.empty;
cmXiUI = CovarianceUI.empty;
cmTiltUI = CovarianceUI.empty;
modelNo = [];
model = [];
saved = true;
previousTypeData = 1;
previousTypeInv = 1;

fs = 11;
if nargin>=3
    fs = varargin{3};
elseif ispc
    fs = 9;
end
vScale = 1;
if ispc
    vScale = 0.81;
end

width = 1400;
height = 875*vScale;
% get screen size
su = get(groot,'Units');
set(groot,'Units','points')
scnsize = get(groot,'ScreenSize');
pos = [scnsize(3)/2-width/2 scnsize(4)/2-height/2 width height];
set(groot,'Units',su)       % Restore default root screen units

f = figure('Visible','off',...
    'Units','points',...
    'Position',pos,...
    'Tag','fig_bh_tomo2_inv',...
    'Name','bh_tomo_inv',...
    'NumberTitle','off',...
    'ToolBar','none',...,
    'MenuBar','None',...
    'SizeChangedFcn',@resizeUI,...
    'CloseRequestFcn',@closeWindow);

%
% Menu
%
hmenu = uimenu(f,'Label','File');
uimenu(hmenu,'Label','Open ...',...
    'Accelerator','O',...
    'Callback',@openFile);
uimenu(hmenu,'Label','Save',...
    'Accelerator','S',...
    'Callback',@saveFile);
uimenu(hmenu,'Label','Close',...
    'Separator','on',...
    'Accelerator','W',...
    'Callback',@closeWindow);
hinvMenu = uimenu(f,'Label','Inversion');
hresultsMenu = uimenu(f,'Label','Results');
hdataMenu = uimenu(f,'Label','Data');

%
% Main Panels
%

pdata = uipanel(f,'Title','Data',...
    'Units','points',...
    'FontSize',fs+1);
pgrid = uipanel(f,'Title','Grid',...
    'Units','points',...
    'FontSize',fs+1);
pprevious = uipanel(f,'Title','Previous Inversion',...
    'Units','points',...
    'FontSize',fs+1);
pinv = uipanel(f,'Title','Inversion Parameters',...
    'Units','points',...
    'FontSize',fs+1);
pfig = uipanel(f,'Title','Figures',...
    'Units','points',...
    'FontSize',fs+1);

hmessage = uicontrol('Style','text',...
    'ForegroundColor','red',...
    'BackgroundColor','white',...
    'FontSize',fs+1,...
    'Units','points',...
    'Parent',f);

nLines=5;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

% Data

hpanelName = uicontrol('Style','text',...
    'String','Model: ',...
    'ForegroundColor','red',...
    'FontSize',fs+1,...
    'Units','normalized',...
    'Position',[0.03 3.5*vSize+5*vSpace 0.47 vSize],...
    'Parent',pdata);
hTypeData = uicontrol('Style','popupmenu',...
    'String',{'Traveltime','Amplitude - Peak-to-Peak','Amplitude - Centroid Frequency'},...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.03 2*vSize+3*vSpace 0.47 vSize],...
    'Callback',@changeTypeData,...
    'Parent',pdata);
huseCont = uicontrol('Style','checkbox',...
    'String','Use Constraints',...
    'Value',1,...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.03 2*vSpace 0.47 vSize],...
    'Parent',pdata);
hlistMog = uicontrol('Style','listbox',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.516 vSpace 0.47 4*vSize+4*vSpace],...
    'Parent',pdata);
uicontrol('Style','text',...
    'String','Select Mog',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.516 4*vSize+5*vSpace 0.47 vSize],...
    'Parent',pdata);

% Grid

nLines=3;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

hncells = uicontrol('Style','text',...
    'String',' Cells',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.5 vSpace 0.5 vSize],...
    'Parent',pgrid);

uicontrol('Style','text',...
    'String','Max',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.005 vSpace 0.12 vSize],...
    'Parent',pgrid);
hxmax = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.125 vSpace 0.12 vSize],...
    'Parent',pgrid);
hymax = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.25 vSpace 0.12 vSize],...
    'Parent',pgrid);
hzmax = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.375 vSpace 0.12 vSize],...
    'Parent',pgrid);

uicontrol('Style','text',...
    'String','Min',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.005 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);
hxmin = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.125 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);
hymin = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.25 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);
hzmin = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.375 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);

uicontrol('Style','text',...
    'String','X',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.125 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);
uicontrol('Style','text',...
    'String','Y',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.25 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);
uicontrol('Style','text',...
    'String','Z',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.375 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);

uicontrol('Style','text',...
    'String','X',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.62 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);
uicontrol('Style','text',...
    'String','Y',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.745 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);
uicontrol('Style','text',...
    'String','Z',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'Position',[0.87 3*vSpace+2*vSize 0.12 vSize],...
    'Parent',pgrid);

uicontrol('Style','text',...
    'String','Step ',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.49 2*vSpace+vSize 0.11 vSize],...
    'Parent',pgrid);
hdx = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.62 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);
hdy = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.745 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);
hdz = uicontrol('Style','text',...
    'String','0',...
    'ForegroundColor','red',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.87 2*vSpace+vSize 0.12 vSize],...
    'Parent',pgrid);


% Previous Inversions

nLines=2;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

hpreviousInv = uicontrol('Style','popupmenu',...
    'String','-',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.025 2*vSpace+vSize 0.6 vSize],...
    'Parent',pprevious);
huseRays = uicontrol('Style','checkbox',...
    'String','Use Rays',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.675 2*vSpace+vSize 0.3 vSize],...
    'Parent',pprevious);
hviewPrevious = uicontrol('Style','pushbutton',...
    'String','View',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.025 vSpace 0.3 vSize],...
    'Callback',@viewPrevious,...
    'Parent',pprevious);
hdeletePrevious = uicontrol('Style','pushbutton',...
    'String','Delete',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.35 vSpace 0.3 vSize],...
    'Callback',@deletePrevious,...
    'Parent',pprevious);
hloadPrevious = uicontrol('Style','pushbutton',...
    'String','Load',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.675 vSpace 0.3 vSize],...
    'Callback',@loadPrevious,...
    'Parent',pprevious);


% Inversion params

nLines=18;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

hdoInv = uicontrol('Style','pushbutton',...
    'String','GO',...
    'FontSize',fs+1,...
    'FontWeight','bold',...
    'Units','normalized',...
    'Position',[0.3 vSpace 0.4 vSize],...
    'Callback',@doInv,...
    'Parent',pinv);
pgeostat = uipanel(pinv,'Title','Geostatistical Inversion',...
    'Units','normalized',...
    'Position',[0.025 2*vSpace+1*vSize 0.95 14*vSize+14*vSpace],...
    'FontSize',fs,...
    'Visible','on');
plsqr = uipanel(pinv,'Title','LSQR',...
    'Units','normalized',...
    'Position',[0.025 2*vSpace+1*vSize 0.95 14*vSize+14*vSpace],...
    'FontSize',fs,...
    'Visible','off');
pnumit = uipanel(pinv,'Title','Number of Iterations',...
    'Units','normalized',...
    'Position',[0.025 16*vSpace+15*vSize 0.95 1.5*vSize+2*vSpace],...
    'FontSize',fs);

uicontrol('Style','text',...
    'String','Algorithm',...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.1 18*vSpace+16.75*vSize 0.3 vSize],...
    'Parent',pinv);
htypeInv = uicontrol('Style','popupmenu',...
    'String',{'Geostatistic','LSQR'},...
    'Units','normalized',...
    'Position',[0.45 18*vSpace+16.75*vSize 0.4 vSize],...
    'Callback',@changeTypeInv,...
    'Parent',pinv);

nLines=1;
vSizeTot = nLines*22 + 2*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

uicontrol('Style','text',...
    'String','Straight Rays',...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.12 vSpace 0.2 vSize],...
    'Parent',pnumit);
hnStraight = uicontrol('Style','edit',...
    'String','1',...
    'Units','normalized',...
    'Position',[0.34 vSpace 0.15 vSize],...
    'Parent',pnumit);
uicontrol('Style','text',...
    'String','Curved Rays',...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.51 vSpace 0.2 vSize],...
    'Parent',pnumit);
hnCurved = uicontrol('Style','edit',...
    'String','1',...
    'Units','normalized',...
    'Position',[0.73 vSpace 0.15 vSize],...
    'Parent',pnumit);


nLines=16;
vSizeTot = nLines*22 + (6+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

pnugget = uipanel(pgeostat,'Title','Nugget Effect',...
    'Units','normalized',...
    'Position',[0.025 vSpace 0.95 3*vSize],...
    'FontSize',fs);
pparams = uipanel(pgeostat,'Title','Parameters',...
    'Units','normalized',...
    'Position',[0.025 2*vSpace+3*vSize 0.95 10*vSize],...
    'FontSize',fs);

hstructList = uicontrol('Style','popupmenu',...
    'String',{'Structure No 1'},...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.625 4*vSpace+13*vSize 0.35 vSize],...
    'Parent',pgeostat);
hvariance = uicontrol('Style','checkbox',...
    'String','Include Experimental Variance',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.025 4*vSpace+13*vSize 0.45 vSize],...
    'Parent',pgeostat);
helliptical = uicontrol('Style','checkbox',...
    'String','Elliptical Velocity Anisotropy',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.025 5*vSpace+14*vSize 0.45 vSize],...
    'Callback',@doElliptical,...
    'Parent',pgeostat);
htilted = uicontrol('Style','checkbox',...
    'String','Tilted Elliptical Vel. Anisotropy',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.5 5*vSpace+14*vSize 0.45 vSize],...
    'Callback',@doTilted,...
    'Parent',pgeostat);
hdoSimu = uicontrol('Style','checkbox',...
    'String','Simulations',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.025 6*vSpace+15*vSize 0.25 vSize],...
    'Parent',pgeostat);
uicontrol('Style','text',...
    'String','Number of Simulations ',...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Position',[0.475 6*vSpace+15*vSize 0.35 vSize],...
    'Parent',pgeostat);
hnSimu = uicontrol('Style','edit',...
    'String','100',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.825 6*vSpace+15*vSize 0.15 vSize],...
    'Parent',pgeostat);

nLines=2;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

uicontrol('Style','text',...
    'String','Slowness',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.01 2*vSpace+vSize 0.25 vSize],...
    'Parent',pnugget);
hmodelNugget = uicontrol('Style','edit',...
    'String','0',...
    'FontSize',fs,...
    'Units','normalized',...
    'Callback',@updateCov,...
    'Position',[0.28 2*vSpace+vSize 0.15 vSize],...
    'Parent',pnugget);
uicontrol('Style','text',...
    'String','Traveltime',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Position',[0.51 2*vSpace+vSize 0.25 vSize],...
    'Parent',pnugget);
httNugget = uicontrol('Style','edit',...
    'String','0',...
    'FontSize',fs,...
    'Units','normalized',...
    'Callback',@updateCov,...
    'Position',[0.78 2*vSpace+vSize 0.15 vSize],...
    'Parent',pnugget);
hxiText = uicontrol('Style','text',...
    'String',char(958),...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Visible','off',...
    'Position',[0.01 vSpace 0.25 vSize],...
    'Parent',pnugget);
hxiNugget = uicontrol('Style','edit',...
    'String','0',...
    'FontSize',fs,...
    'Units','normalized',...
    'Callback',@updateCov,...
    'Visible','off',...
    'Position',[0.28 vSpace 0.15 vSize],...
    'Parent',pnugget);
htiltText = uicontrol('Style','text',...
    'String','Tilt Angle',...
    'FontSize',fs,...
    'Units','normalized',...
    'HorizontalAlignment','right',...
    'Visible','off',...
    'Position',[0.51 vSpace 0.25 vSize],...
    'Parent',pnugget);
htiltNugget = uicontrol('Style','edit',...
    'String','0',...
    'FontSize',fs,...
    'Units','normalized',...
    'Callback',@updateCov,...
    'Visible','off',...
    'Position',[0.78 vSpace 0.15 vSize],...
    'Parent',pnugget);


nLines=9;
vSizeTot = nLines*22 + (nLines+1)*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

hvar = uicontrol('Style','text',...
    'String','Variable',...
    'FontSize',fs,...
    'HorizontalAlignment','center',...
    'BackgroundColor','white',...
    'Units','normalized',...
    'Position',[0.23 9*vSpace+8*vSize 0.23 vSize],...
    'Visible','off',...
    'Parent',pparams);
hxi = uicontrol('Style','text',...
    'String',char(958),...
    'FontSize',fs,...
    'HorizontalAlignment','center',...
    'BackgroundColor','white',...
    'Units','normalized',...
    'Position',[0.49 9*vSpace+8*vSize 0.23 vSize],...
    'Visible','off',...
    'Parent',pparams);
htilt = uicontrol('Style','text',...
    'String','Tile Angle',...
    'FontSize',fs,...
    'HorizontalAlignment','center',...
    'BackgroundColor','white',...
    'Units','normalized',...
    'Position',[0.74 9*vSpace+8*vSize 0.23 vSize],...
    'Visible','off',...
    'Parent',pparams);
hsillText = uicontrol('Style','text',...
    'String','Sill',...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hthetaZtext = uicontrol('Style','text',...
    'String',[char(952),' Z'],...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hthetaYtext = uicontrol('Style','text',...
    'String',[char(952),' Y'],...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hthetaXtext = uicontrol('Style','text',...
    'String',[char(952),' X'],...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hrangeZtext = uicontrol('Style','text',...
    'String','Range Z',...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hrangeYtext = uicontrol('Style','text',...
    'String','Range Y',...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);
hrangeXtext = uicontrol('Style','text',...
    'String','Range X',...
    'FontSize',fs,...
    'HorizontalAlignment','right',...
    'Units','normalized',...
    'Visible','off',...
    'Parent',pparams);


nLines=1;
vSizeTot = nLines*22 + 2*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

hcolorbar = uicontrol('Style','checkbox',...
    'String','Colorbar',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 vSpace 0.1 vSize],...
    'Callback',@doColorbar,...
    'Parent',pfig);
uicontrol('Style','text',...
    'String','Min: ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.14 vSpace 0.05 vSize],...
    'Parent',pfig)
hcmin = uicontrol('Style','edit',...
    'String','0.06',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.2 vSpace 0.07 vSize],...
    'Parent',pfig);
uicontrol('Style','text',...
    'String','Max: ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.28 vSpace 0.05 vSize],...
    'Parent',pfig)
hcmax = uicontrol('Style','edit',...
    'String','0.12',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.34 vSpace 0.07 vSize],...
    'Parent',pfig);

m = {'cmr','parula','jet','hsv','hot','cool','autumn','spring','winter',...
    'summer','gray','bone','copper','pink','prism','flag','colorcube','lines'};

hcmap = uicontrol('Style','popupmenu',...
    'String',m,...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.42 vSpace 0.15 vSize],...
    'Parent',pfig);

nLines=14;
vSizeTot = nLines*22 + nLines*5;
vSize = 22/vSizeTot;
vSpace = 5/vSizeTot;

uicontrol('Style','text',...
    'String','Tolerance ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 12*vSpace+11*vSize 0.75 vSize],...
    'Parent',plsqr);
uicontrol('Style','text',...
    'String','Alpha ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 11*vSpace+10*vSize 0.75 vSize],...
    'Parent',plsqr);
uicontrol('Style','text',...
    'String','gradmin ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 10*vSpace+9*vSize 0.75 vSize],...
    'Parent',plsqr);
uicontrol('Style','text',...
    'String','correlmin ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 9*vSpace+8*vSize 0.75 vSize],...
    'Parent',plsqr);
uicontrol('Style','text',...
    'String','Number of solver iterations ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 8*vSpace+7*vSize 0.75 vSize],...
    'Parent',plsqr);
uicontrol('Style','text',...
    'String','Max Velocity Variation per Iteration [%] ',...
    'HorizontalAlignment','right',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.02 7*vSpace+6*vSize 0.75 vSize],...
    'Parent',plsqr);

htolLSQR = uicontrol('Style','edit',...
    'String','1e-6',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 12*vSpace+11*vSize 0.15 vSize],...
    'Parent',plsqr);
halphaLSQR = uicontrol('Style','edit',...
    'String','10',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 11*vSpace+10*vSize 0.15 vSize],...
    'Parent',plsqr);
hgradminLSQR = uicontrol('Style','edit',...
    'String','1e-12',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 10*vSpace+9*vSize 0.15 vSize],...
    'Parent',plsqr);
hcorelminLSQR = uicontrol('Style','edit',...
    'String','1',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 9*vSpace+8*vSize 0.15 vSize],...
    'Parent',plsqr);
hnitLSQR = uicontrol('Style','edit',...
    'String','100',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 8*vSpace+7*vSize 0.15 vSize],...
    'Parent',plsqr);
hdeltamaxLSQR = uicontrol('Style','edit',...
    'String','50',...
    'FontSize',fs,...
    'Units','normalized',...
    'Position',[0.8 7*vSpace+6*vSize 0.15 vSize],...
    'Parent',plsqr);


haxes1 = axes('Units','points','Parent',f,'Visible','on');
haxes2 = axes('Units','points','Parent',f,'Visible','off');
haxes3 = axes('Units','points','Parent',f,'Visible','off');


f.Visible = 'on';


    function resizeUI(varargin)
        f.Visible = 'off';
        hBorder = 15;
        width = f.Position(3);
        height = f.Position(4);
        
        vFac = 1;
        if ispc
            vFac = 0.81*vFac;
        end
        vSize = 22*vFac;
        vSpace = 5*vFac;
        vBorder = 10*vFac;
        
        axBorder = 60;%haxes1.Position(2);
        
        hSize = 420;
        
        vSizeCumul = vBorder;
        vSize2 = 19*vSize+20*vSpace;
        pinv.Position = [hBorder vSizeCumul hSize vSize2];
        vSizeCumul = vSizeCumul + vBorder + vSize2;
        
        vSize2 = 2.75*vSize+3*vSpace;
        pprevious.Position = [hBorder vSizeCumul hSize vSize2];
        vSizeCumul = vSizeCumul + vBorder + vSize2;
        
        vSize2 = 3*vSize+4*vSpace;
        pgrid.Position = [hBorder vSizeCumul hSize vSize2];
        vSizeCumul = vSizeCumul + vBorder + vSize2;
        
        vSize2 = 5*vSize+6*vSpace;
        pdata.Position = [hBorder vSizeCumul hSize vSize2];
        
        rBorder = 2*hBorder;
        vSize2 = height-2*axBorder-4*vSize;
        hSize2 = width-(hBorder+hSize+axBorder+rBorder);
        
        hmessage.Position = [hBorder+hSize+axBorder height-2*vSize hSize2 vSize];
        pfig.Position = [hBorder+hSize+axBorder height-4.25*vSize hSize2 1.5*vSize+2*vSpace];
        
        haxes1.Position = [hBorder+hSize+axBorder axBorder hSize2 vSize2];
        
        f.Visible = 'on';
    end

    function closeWindow(varargin)
        if saved == false
            choice = questdlg('Database not saved, quit anyway?',...
                'bh_tomo_db',...
                'Don''t save','Cancel','Save','Save');
            switch choice
                case 'Don''t save'
                case 'Cancel'
                    return
                case 'Save'
                    saveFile()
            end
        end
        quitUI()
    end
    function quitUI(varargin)
        delete(f)
    end
    function saveFile(varargin)
        if isempty(model)
            return
        end
        m=matfile([rep,file],'Writable',true);
        m.models(modelNo) = model;
        saved = true;
    end
    function openFile(varargin)
        [modelNo,file2,rep2] = chooseModel(rep,file);
        if isempty(modelNo)
            return
        end
        rep=rep2;
        file=file2;
        try
            load([rep,file],'models','names_mog')
        catch ME
            errordlg(ME.message)
            return
        end
        model = models(modelNo);
        if isempty(model.grid)
            errordlg('Grid not created, covariance cannot be computed')
            return
        end
        
        %
        % Reset UI
        %
        cla(haxes1)
        cla(haxes2)
        cla(haxes3)
        
        mname = cell(numel(model.mogs),1);
        for n=1:numel(model.mogs)
            mname{n} = names_mog{model.mogs(n)}; %#ok<USENS>
        end
        hlistMog.String = mname;
        hlistMog.Max = numel(model.mogs);
        hpanelName.String = model.name;
        
        nr = cell(1+numel(model.inv_res),1);
        nr{1} = '-';
        for n=1:numel(model.inv_res)
            nr{n+1} = [char( model.inv_res(n).name ), ', ',char( model.inv_res(n).tomo.date)];
        end
        hpreviousInv.String = nr;
        hpreviousInv.Value = 1;
        huseRays.Value = 0;
        
        hxmin.String = num2str(model.grid.grx(1));
        hxmax.String = num2str(model.grid.grx(end));
        hdx.String = num2str(model.grid.dx());
        if strcmp(model.grid.type, '3D')
            hymin.String = num2str(model.grid.gry(1));
            hymax.String = num2str(model.grid.gry(end));
            hdy.String = num2str(model.grid.dy());
            helliptical.Enable = 'off';
        else
            hymin.String = '0';
            hymax.String = '0';
            hdy.String = '0';
            helliptical.Enable = 'on';
        end
        hzmin.String = num2str(model.grid.grz(1));
        hzmax.String = num2str(model.grid.grz(end));
        hdz.String = num2str(model.grid.dz());
        hncells.String = num2str(model.grid.getNumberOfCells());
        
        hTypeData.Value = 1;
        
        if ~isempty(model.tt_covar.covar)
            hvar.String = 'Slowness';
            cm = model.tt_covar;
            fillCovarUI()
        else
            if htypeInv.Value==1
                warndlg({'Covariance model parameters not defined',...
                'Use Covariance Model Estmation Module',...
                'Switching to LSQR'})
                htypeInv.Value = 2;
                changeTypeInv()
            end
        end
    end
    function fillCovarUI()
        
        delete(cmUI)
        delete(cmXiUI)
        delete(cmTiltUI)
        
        nLines = 9;
        vSizeTot = nLines*22 + (nLines+1)*5;
        vSize = 22/vSizeTot;
        vSpace = 5/vSizeTot;
        
        if strcmp(model.grid.type, '3D')
            hsillText.Position = [0.01 vSpace 0.21 vSize];
            hthetaZtext.Position = [0.01 2*vSpace+vSize 0.21 vSize];
            hthetaYtext.Position = [0.01 3*vSpace+2*vSize 0.21 vSize];
            hthetaXtext.Position = [0.01 4*vSpace+3*vSize 0.21 vSize];
            hrangeZtext.Position = [0.01 5*vSpace+4*vSize 0.21 vSize];
            hrangeYtext.Position = [0.01 6*vSpace+5*vSize 0.21 vSize];
            hrangeXtext.Position = [0.01 7*vSpace+6*vSize 0.21 vSize];
            hsillText.Visible = 'on';
            hthetaZtext.Visible = 'on';
            hthetaYtext.Visible = 'on';
            hthetaXtext.Visible = 'on';
            hrangeZtext.Visible = 'on';
            hrangeYtext.Visible = 'on';
            hrangeXtext.Visible = 'on';
        else
            hsillText.Position = [0.01 4*vSpace+3*vSize 0.21 vSize];
            hthetaXtext.Position = [0.01 5*vSpace+4*vSize 0.21 vSize];
            hrangeZtext.Position = [0.01 6*vSpace+5*vSize 0.21 vSize];
            hrangeXtext.Position = [0.01 7*vSpace+6*vSize 0.21 vSize];
            hsillText.Visible = 'on';
            hthetaZtext.Visible = 'off';
            hthetaYtext.Visible = 'off';
            hthetaXtext.Visible = 'on';
            hrangeZtext.Visible = 'on';
            hrangeYtext.Visible = 'off';
            hrangeXtext.Visible = 'on';
        end
        
        hvar.Visible = 'on';
        
        hstructList.Value = 1;
        nStruct = numel(cm.covar);
        sname = cell(nStruct,1);
        for n=1:nStruct
            sname{n} = ['Structure no ',num2str(n)];
            cmUI(n) = CovarianceUI(cm.covar(n).range, cm.covar.angle(n), cm.covar.sill(n),...
                false,...
                'Units','normalized',...
                'Position',[0.23 3.5*vSpace+3*vSize 0.23 4*vSize+5*vSpace],...
                'Parent',pparams);
            cmUI(n).setVisible('off');
            
            cmUI(n).createList('Units','normalized',...
                'Position',[0.23 8*vSpace+7*vSize 0.23 vSize],...
                'Parent',pparams);
            cmUI(n).setType(cm.covar(n).type);
            addlistener(cmUI(n),'covarianceEdited',@updateCovPar);
            addlistener(cmUI(n),'typeChanged',@changeCovType);
        end
        hstructList.String = sname;
        cmUI(1).setVisible('on');
        
        httNugget.String = num2str(cm.nugget_d);
        hmodelNugget.String = num2str(cm.nugget_m);
        hxiNugget.String = num2str(cm.nugget_xi);
        htiltNugget.String = num2str(cm.nugget_tilt);
        hvariance.Value = cm.use_c0;
        helliptical.Value = cm.use_xi;
        htilted.Value = cm.use_tilt;
        
        fillEllipticalUI()
        fillTiltUI()

        if ~isempty(cm.covar_xi)
            
            for n=1:nStruct
                if strcmp(model.grid.type, '3D')
                    cmXiUI(n) = CovarianceUI(cm.covar_xi(n).range,...
                        cm.covar_xi(n).angle,...
                        cm.covar_xi(n).sill,...
                        false,...
                        'Units','normalized',...
                        'Position',[0.49 0.5*vSpace 0.23 7*vSize+8*vSpace],...
                        'Parent',pparams);
                else
                    cmXiUI(n) = CovarianceUI(cm.covar_xi(n).range,...
                        cm.covar_xi(n).angle,...
                        cm.covar_xi(n).sill,...
                        false,...
                        'Units','normalized',...
                        'Position',[0.23 3.5*vSpace+3*vSize 0.23 4*vSize+5*vSpace],...
                        'Parent',pparams);
                end
                cmXiUI(n).createList('Units','normalized',...
                    'Position',[0.23 8*vSpace+7*vSize 0.23 vSize],...
                    'Parent',pparams);
                cmXiUI(n).setType(cm.covar_xi(n).type);
                cmXiUI(n).setVisible('off');
                addlistener(cmXiUI(n),'covarianceEdited',@updateCovPar);
                addlistener(cmXiUI(n),'typeChanged',@changeCovType);
            end
            cmXiUI(1).setVisible('on');
        end
        if ~isempty(cm.covar_tilt)
            
            for n=1:nStruct
                if strcmp(model.grid.type, '3D')
                    cmTiltUI(n) = CovarianceUI(cm.covar_tilt(n).range, ...
                        cm.covar_tilt.angle(n), cm.covar_tilt.sill(n),...
                        false,...
                        'Units','normalized',...
                        'Position',[0.23 0.5*vSpace0 0.23 7*vSize+8*vSpace],...
                        'Parent',pparams);
                else
                    cmTiltUI(n) = CovarianceUI(cm.covar_tilt(n).range, ...
                        cm.covar_tilt.angle(n), cm.covar_tilt.sill(n),...
                        false,...
                        'Units','normalized',...
                        'Position',[0.23 3.5*vSpace+3*vSize 0.23 4*vSize+5*vSpace],...
                        'Parent',pparams);
                end
                cmTiltUI(n).setVisible('off');
                
                cmTiltUI(n).createList('Units','normalized',...
                    'Position',[0.23 8*vSpace+7*vSize 0.23 vSize],...
                    'Parent',pparams);
                cmTiltUI(n).setType(cm.covar_tilt(n).type);
                addlistener(cmTiltUI(n),'covarianceEdited',@updateCovPar);
                addlistener(cmTiltUI(n),'typeChanged',@changeCovType);
            end
            cmTiltUI(1).setVisible('on');
        end
    end
    function fillEllipticalUI()
        if helliptical.Value == 1
            hxi.Visible = 'on';
            hxiText.Visible = 'on';
            hxiNugget.Visible = 'on';
            htilted.Enable = 'on';
                        
            cmXiUI(hstructList.Value).setVisible('on');

        else
            hxi.Visible = 'off';
            hxiText.Visible = 'off';
            hxiNugget.Visible = 'off';
            htilted.Enable = 'off';
            htilted.Value = 0;
            htilt.Visible = 'off';
            htiltText.Visible = 'off';
            htiltNugget.Visible = 'off';
            if ~isempty(cmXiUI)
                for n=1:numel(cmXiUI)
                    cmXiUI(n).setVisible('off');
                end
            end
            if ~isempty(cmTiltUI)
                for n=1:numel(cmTiltUI)
                    cmTiltUI(n).setVisible('off');
                end
            end
        end
    end
    function fillTiltUI()
        if htilted.Value == 1
            htilt.Visible = 'on';
            htiltText.Visible = 'on';
            htiltNugget.Visible = 'on';
                        
            cmTiltUI(hstructList.Value).setVisible('on');

        else
            htilt.Visible = 'off';
            htiltText.Visible = 'off';
            htiltNugget.Visible = 'off';
            if ~isempty(cmTiltUI)
                for n=1:numel(cmTiltUI)
                    cmTiltUI(n).setVisible('off');
                end
            end
        end
    end
    function changeCovType(src,varargin)
        sNo = hstructList.Value;
        if src == cmUI(sNo)
            cm.covar(sNo) = CovarianceModels.buildCov(cmUI(sNo).getType(),...
                cmUI(sNo).range,cmUI(sNo).angle,cmUI(sNo).sill);
        elseif src == cmXiUI(sNo)
            cm.covar_xi(sNo) = CovarianceModels.buildCov(cmXiUI(sNo).getType(),...
                cmXiUI(sNo).range,cmXiUI(sNo).angle,cmXiUI(sNo).sill);
        elseif src == cmTiltUI(sNo)
            cm.covar_tilt(sNo) = CovarianceModels.buildCov(cmTiltUI(sNo).getType(),...
                cmTiltUI(sNo).range,cmTiltUI(sNo).angle,cmTiltUI(sNo).sill);
        end
    end
    function updateCovPar(src,varargin)
        sNo = hstructList.Value;
        if src == cmUI(sNo)
            cm.covar(sNo).range = cmUI(sNo).range;
            cm.covar(sNo).angle = cmUI(sNo).angle;
            cm.covar(sNo).sill = cmUI(sNo).sill;
        elseif src == cmXiUI(sNo)
            cm.covar_xi(sNo).range = cmXiUI(sNo).range;
            cm.covar_xi(sNo).angle = cmXiUI(sNo).angle;
            cm.covar_xi(sNo).sill = cmXiUI(sNo).sill;
        elseif src == cmTiltUI(sNo)
            cm.covar_tilt(sNo).range = cmTiltUI(sNo).range;
            cm.covar_tilt(sNo).angle = cmTiltUI(sNo).angle;
            cm.covar_tilt(sNo).sill = cmTiltUI(sNo).sill;
        end
    end

    function changeTypeData(varargin)
        if hTypeData.Value ~= previousTypeData
            % type was really changed
            % TODO
            
            previousTypeData = hTypeData.Value;
        end
    end

    function changeTypeInv(varargin)
        if htypeInv.Value ~= previousTypeInv
            % type was really changed
            if htypeInv.Value==1
                if (hTypeData.Value==1 && isempty(model.tt_covar.covar)) || ...
                        (hTypeData.Value~=1 && isempty(model.amp_covar.covar))
                    warndlg({'Covariance model parameters not defined',...
                        'Use Covariance Model Estmation Module',...
                        'Switching to LSQR'})
                    htypeInv.Value = 2;
                    return
                end
                if hTypeData.Value==1
                    cm = model.tt_covar;
                else
                    cm = model.amp_covar;
                end
                pgeostat.Visible = 'on';
                plsqr.Visible = 'off';
                fillCovarUI()
            else
                pgeostat.Visible = 'off';
                plsqr.Visible = 'on';
            end
            previousTypeInv = htypeInv.Value;
        end
    end

    function viewPrevious(varargin)
        
    end
    function deletePrevious(varargin)
        
    end
    function loadPrevious(varargin)
        
    end
    function doColorbar(varargin)
        
    end
    function doInv(varargin)
        
    end
    function doElliptical(varargin)
        if helliptical.Value==1 && isempty(cm.covar_xi)
            warndlg({'Covariance model parameters not defined for elliptically anisotropic media'...
                'Use Covariance Model Estmation Module'})
            helliptical.Value = 0;
        end
        fillEllipticalUI()
    end
    function doTilted(varargin)
        if htilted.Value==1 && isempty(cm.covar_tilt)
            warndlg({'Covariance model parameters not defined for tilted elliptically anisotropic media'...
                'Use Covariance Model Estmation Module'})
            htilted.Value = 0;
        end
        fillTiltUI()
    end

end